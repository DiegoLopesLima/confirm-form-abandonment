angular

	.module('confirmFormAbandonment', [])

	.value('confirmFormAbandonmentConfig', {
		event: '$stateChangeStart',
		confirm: function(message) {

			return confirm('Há dados não salvos na página. Tem certeza que deseja sair?');

		}
	})

	.service('confirmFormAbandonmentService', ['confirmFormAbandonmentConfig', function(confirmFormAbandonmentConfig) {

		this.setConfig = function(name, value) {

			confirmFormAbandonmentConfig[name] = value;

		};

	}])

	.directive('confirmFormAbandonment', ['$timeout', 'confirmFormAbandonmentConfig', function($timeout, confirmFormAbandonmentConfig) {

		return {
			restrict: 'A',
			scope: {
				confirmFormAbandonment: '='
			},
			link: function(scope, element, attrs) {

				$timeout(function() {

					element

						.off('change.__confirmFormAbandonment__')

						.on('change.__confirmFormAbandonment__', function() {

							var data = element.data('__confirmFormAbandonment__');

							element.data('__confirmFormAbandonment__', angular.extend({}, data, {
								modified: !angular.equals(data.originalData, scope.confirmFormAbandonment)
							}));

						})

						.data('__confirmFormAbandonment__', {
							originalData: angular.extend({}, scope.confirmFormAbandonment),
							modified: false
						});

				});

			}
		};

	}])

	.run(['$rootScope', 'confirmFormAbandonmentConfig', function($rootScope, confirmFormAbandonmentConfig) {

		$rootScope.$on(confirmFormAbandonmentConfig.event, function(event) {

			var trigger = false;

			angular.element('form[confirm-form-abandonment]').each(function() {

				if (angular.element(this).data('__confirmFormAbandonment__').modified)

					trigger = true;

			});

			if (trigger) {

				if (!confirmFormAbandonmentConfig.confirm())

					event.preventDefault();

			}

		});

	}]);
